{"version":3,"sources":["components/InfoBox.jsx","components/WeatherBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Citybox","data","weather","icon","className","name","main","temp","temp_max","temp_min","WeatherBox","useState","city","setCity","search","setSearch","setData","setWeather","useEffect","a","axios","get","res","console","log","description","weatherinfo","TextField","id","label","value","onChange","e","target","IconButton","onClick","InfoBox","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oWAiDeA,MAxCf,YAAqC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACjBC,EAAO,KAEX,OAAQD,GACJ,IAAK,OACDC,EAAO,cAAC,IAAD,IACP,MACJ,IAAK,YACDA,EAAO,cAAC,IAAD,IACP,MACJ,IAAK,gBACDA,EAAO,cAAC,IAAD,IACP,MACJ,IAAK,aACDA,EAAO,cAAC,IAAD,IACP,MACA,IAAK,kBACDA,EAAO,cAAC,IAAD,IAMnB,OACI,mCAEiB,OAATF,EAAgB,8CAAgB,uBAAhB,4BACZ,sBAAKG,UAAU,UAAf,UACI,cAAC,IAAD,CAAeA,UAAU,SACzB,6BAAKH,EAAKI,OACV,8BAAIH,EAASC,KAEb,+BAAKF,EAAKK,KAAKC,KAAf,aACA,sCAASN,EAAKK,KAAKE,SAAnB,kBAA8CP,EAAKK,KAAKG,SAAxD,mB,iBCCTC,MAnCf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwBJ,mBAAS,MAAjC,mBAAOV,EAAP,KAAae,EAAb,KACA,EAA8BL,mBAAS,IAAvC,mBAAOT,EAAP,KAAgBe,EAAhB,KAaA,OAXAC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACmBC,IAAMC,IAAN,4DAA+DP,EAA/D,yDADnB,OACQQ,EADR,OAEEC,QAAQC,IAAIF,EAAIrB,MAChBe,EAAQM,EAAIrB,MACZgB,EAAWK,EAAIrB,KAAKC,QAAQ,GAAGuB,aAJjC,4CADc,uBAAC,WAAD,wBAOdC,KACA,CAACZ,IAID,qCACE,6CAEA,mCACE,cAACa,EAAA,EAAD,CAAWvB,UAAU,QAAQwB,GAAG,iBAAiBC,MAAM,kBAAkBC,MAAOlB,EAAMmB,SAAU,SAACC,GAAD,OAAKnB,EAAQmB,EAAEC,OAAOH,UACtH,cAACI,EAAA,EAAD,CAAY9B,UAAU,UAAU+B,QAAS,kBAAIpB,EAAUH,IAAvD,SACE,cAAC,IAAD,MAGF,cAACwB,EAAD,CAASnC,KAAMA,EAAMC,QAASA,WCzBvBmC,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,OCMSkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.490d8d39.chunk.js","sourcesContent":["import React from 'react';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\nimport '../weather.css';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport OpacityIcon from '@material-ui/icons/Opacity';\r\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\r\n\r\nfunction Citybox({ data, weather }) {\r\n    let icon = null;\r\n\r\n    switch (weather) {\r\n        case 'haze':\r\n            icon = <CloudIcon />;\r\n            break;\r\n        case 'clear sky':\r\n            icon = <WbSunnyIcon />;\r\n            break;\r\n        case 'moderate rain':\r\n            icon = <BeachAccessIcon />;\r\n            break;\r\n        case 'light rain':\r\n            icon = <OpacityIcon />;\r\n            break;\r\n            case 'overcast clouds':\r\n                icon = <CloudQueueIcon />;\r\n                break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data === null ? <p>No data Found<br></br> Type proper city name</p> :\r\n                    <div className=\"infobox\">\r\n                        <PersonPinIcon className=\"icon\" />\r\n                        <h2>{data.name}</h2>\r\n                        <p>{weather}{icon}</p>\r\n\r\n                        <h3>{data.main.temp}&#176;Cel</h3>\r\n                        <p>Min: {data.main.temp_max}&#176;Cel | Max: {data.main.temp_min}&#176;Cel</p>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Citybox\r\n","import React,{useState,useEffect} from 'react';\r\nimport '../weather.css';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InfoBox from './InfoBox'\r\nimport axios from 'axios';\r\n\r\nfunction WeatherBox() {\r\n\r\n  const [city, setCity] = useState('');\r\n  const [search, setSearch] = useState('');\r\n  const [data, setData] = useState(null);\r\n  const [weather, setWeather] = useState('')\r\n\r\n  useEffect(() => {\r\n    async function weatherinfo(){\r\n      const res= await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=f779aecdcb84e4a72e87c7f096bbb4a4`)\r\n      console.log(res.data);\r\n      setData(res.data);\r\n      setWeather(res.data.weather[0].description);\r\n    }\r\n    weatherinfo();\r\n  },[search]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h1>Weather App</h1>\r\n\r\n      <header>\r\n        <TextField className=\"input\" id=\"standard-basic\" label=\"Enter City Name\" value={city} onChange={(e)=>setCity(e.target.value)}/>\r\n        <IconButton className=\"src-btn\" onClick={()=>setSearch(city)}>\r\n          <SearchIcon />\r\n        </IconButton>\r\n        \r\n        <InfoBox data={data} weather={weather}/>\r\n      </header>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeatherBox;\r\n","import './App.css';\nimport WeatherBox from './components/WeatherBox';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherBox />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}